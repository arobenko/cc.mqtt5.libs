#pragma once

namespace cc_mqtt5_client
{

struct Config
{
    static constexpr bool HasDynMemAlloc = ##CC_MQTT5_CLIENT_HAS_DYN_MEM_ALLOC_CPP##;
    static constexpr unsigned ClientAllocLimit = ##CC_MQTT5_CLIENT_ALLOC_LIMIT##;    
    static constexpr unsigned StringFieldFixedLen = ##CC_MQTT5_CLIENT_STRING_FIELD_FIXED_LEN##;
    static constexpr unsigned MaxOutputPacketSize = ##CC_MQTT5_CLIENT_MAX_OUTPUT_PACKET_SIZE##;
    static constexpr bool HasUserProps = ##CC_MQTT5_CLIENT_HAS_USER_PROPS_CPP##;
    static constexpr unsigned UserPropsLimit = ##CC_MQTT5_CLIENT_USER_PROPS_LIMIT##;
    static constexpr unsigned ReceiveMaxLimit = ##CC_MQTT5_CLIENT_RECEIVE_MAX_LIMIT##;
    static constexpr bool HasTopicAliases = ##CC_MQTT5_CLIENT_HAS_TOPIC_ALIASES_CPP##;
    static constexpr unsigned TopicAliasesLimit = ##CC_MQTT5_CLIENT_TOPIC_ALIASES_LIMIT##;

    static_assert(HasDynMemAlloc || (ClientAllocLimit > 0U), "Must use CC_MQTT5_CLIENT_ALLOC_LIMIT in configuration to limit number of clients");
    static_assert(HasDynMemAlloc || (StringFieldFixedLen > 0U), "Must use CC_MQTT5_CLIENT_STRING_FIELD_FIXED_LEN in configuration to limit string field length");
    static_assert(HasDynMemAlloc || (MaxOutputPacketSize > 0U), "Must use CC_MQTT5_CLIENT_MAX_OUTPUT_PACKET_SIZE in configuration to limit packet size");
    static_assert(HasDynMemAlloc || (!HasUserProps) || (UserPropsLimit > 0U), "Must use CC_MQTT5_CLIENT_USER_PROPS_LIMIT in configuration to limit amount of user properties");    
    static_assert(HasDynMemAlloc || (ReceiveMaxLimit > 0U), "Must use CC_MQTT5_CLIENT_RECEIVE_MAX_LIMIT in configuration to limit amount of messages to receive");    
    static_assert(HasDynMemAlloc || (!HasTopicAliases) || (TopicAliasesLimit > 0U), "Must use CC_MQTT5_CLIENT_TOPIC_ALIASES_LIMIT in configuration to limit amount of user properties");        
};

} // namespace cc_mqtt5_client
