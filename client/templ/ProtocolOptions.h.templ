#pragma once

#include "cc_mqtt5/options/ClientDefaultOptions.h"
#include "cc_mqtt5/Version.h"

#include <tuple>

static_assert(COMMS_MAKE_VERSION(2, 4, 0) <= CC_MQTT5_VERSION, "The version of cc_mqtt5 protocol definition is too old");

namespace cc_mqtt5_client
{

class ProtocolOptions : public cc_mqtt5::options::ClientDefaultOptions
{
    using BaseImpl = cc_mqtt5::options::ClientDefaultOptions;

public:
    struct field : public BaseImpl::field
    {
        using BinData = 
            std::tuple<
                ##FIELD_BIN_DATA##,
                BaseImpl::field::BinData
            >;

        using PropertiesList = 
            std::tuple<
                ##FIELD_PROPERTIES_LIST##,
                BaseImpl::field::PropertiesList
            >;

        using ProtocolName = 
            std::tuple<
                ##FIELD_PROTOCOL_NAME##,
                BaseImpl::field::ProtocolName
            >;

        using String = 
            std::tuple<
                ##FIELD_STRING##,
                BaseImpl::field::String
            >;
    }; // struct field   

    struct message : public BaseImpl::message
    {
        struct SubscribeFields : public BaseImpl::message::SubscribeFields
        {
            using List =
                std::tuple<
                    ##MESSAGE_SUBSCRIBE_FIELDS_LIST##,
                    BaseImpl::message::SubscribeFields::List
                >;
        };
    }; // struct message
    
    struct frame : public BaseImpl::frame
    {
        struct FrameLayers : public BaseImpl::frame::FrameLayers
        {
            using Data =
                std::tuple<
                    ##MAX_PACKET_SIZE##,
                    BaseImpl::frame::FrameLayers::Data
                >;

            using IdAndFlags =
                std::tuple<
                    ##MSG_ALLOC_OPT##,
                    BaseImpl::frame::FrameLayers::IdAndFlags
                >;
        }; // struct FrameLayers
    }; // struct frame     
};

} // namespace cc_mqtt5_client
